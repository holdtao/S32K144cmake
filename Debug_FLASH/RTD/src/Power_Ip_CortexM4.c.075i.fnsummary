
Analyzing function: Power_Ip_CM4_DisableDeepSleep/4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_CM4_DisableDeepSleep

IPA function summary for Power_Ip_CM4_DisableDeepSleep/4 inlinable
  global time:     6.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Power_Ip_CM4_EnableDeepSleep/3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_CM4_EnableDeepSleep

IPA function summary for Power_Ip_CM4_EnableDeepSleep/3 inlinable
  global time:     6.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Power_Ip_CM4_EnableSleepOnExit/2
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_CM4_EnableSleepOnExit

IPA function summary for Power_Ip_CM4_EnableSleepOnExit/2 inlinable
  global time:     6.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Power_Ip_CM4_DisableSleepOnExit/1
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_CM4_DisableSleepOnExit

IPA function summary for Power_Ip_CM4_DisableSleepOnExit/1 inlinable
  global time:     6.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Power_Ip_CM4_DisableDeepSleep/4 (Power_Ip_CM4_DisableDeepSleep) @05d91e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pCM4/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Power_Ip_CM4_EnableDeepSleep/3 (Power_Ip_CM4_EnableDeepSleep) @05d918c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pCM4/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Power_Ip_CM4_EnableSleepOnExit/2 (Power_Ip_CM4_EnableSleepOnExit) @05d91d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pCM4/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Power_Ip_CM4_DisableSleepOnExit/1 (Power_Ip_CM4_DisableSleepOnExit) @05d91a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pCM4/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
pCM4/0 (pCM4) @05d95ab0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_CM4_DisableSleepOnExit/1 (read)Power_Ip_CM4_EnableSleepOnExit/2 (read)Power_Ip_CM4_EnableDeepSleep/3 (read)Power_Ip_CM4_DisableDeepSleep/4 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Power_Ip_CM4_DisableDeepSleep ()
{
  uint32 tempValue;
  struct Power_Ip_CM4_Type * pCM4.6_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG tempValue => 0
  # DEBUG BEGIN_STMT
  pCM4.6_1 = pCM4;
  tempValue_3 ={v} pCM4.6_1->SCR;
  # DEBUG tempValue => tempValue_3
  # DEBUG BEGIN_STMT
  tempValue_4 = tempValue_3 & 4294967291;
  # DEBUG tempValue => tempValue_4
  # DEBUG BEGIN_STMT
  pCM4.6_1->SCR ={v} tempValue_4;
  return;

}


Power_Ip_CM4_EnableDeepSleep ()
{
  uint32 tempValue;
  struct Power_Ip_CM4_Type * pCM4.4_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG tempValue => 0
  # DEBUG BEGIN_STMT
  pCM4.4_1 = pCM4;
  tempValue_3 ={v} pCM4.4_1->SCR;
  # DEBUG tempValue => tempValue_3
  # DEBUG BEGIN_STMT
  tempValue_4 = tempValue_3 | 4;
  # DEBUG tempValue => tempValue_4
  # DEBUG BEGIN_STMT
  pCM4.4_1->SCR ={v} tempValue_4;
  return;

}


Power_Ip_CM4_EnableSleepOnExit ()
{
  uint32 tempValue;
  struct Power_Ip_CM4_Type * pCM4.2_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG tempValue => 0
  # DEBUG BEGIN_STMT
  pCM4.2_1 = pCM4;
  tempValue_3 ={v} pCM4.2_1->SCR;
  # DEBUG tempValue => tempValue_3
  # DEBUG BEGIN_STMT
  tempValue_4 = tempValue_3 | 2;
  # DEBUG tempValue => tempValue_4
  # DEBUG BEGIN_STMT
  pCM4.2_1->SCR ={v} tempValue_4;
  return;

}


Power_Ip_CM4_DisableSleepOnExit ()
{
  uint32 tempValue;
  struct Power_Ip_CM4_Type * pCM4.0_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG tempValue => 0
  # DEBUG BEGIN_STMT
  pCM4.0_1 = pCM4;
  tempValue_3 ={v} pCM4.0_1->SCR;
  # DEBUG tempValue => tempValue_3
  # DEBUG BEGIN_STMT
  tempValue_4 = tempValue_3 & 4294967293;
  # DEBUG tempValue => tempValue_4
  # DEBUG BEGIN_STMT
  pCM4.0_1->SCR ={v} tempValue_4;
  return;

}


