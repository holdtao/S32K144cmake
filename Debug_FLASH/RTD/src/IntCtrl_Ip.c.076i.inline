IPA function summary for IntCtrl_Ip_ClearPending/14 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_ClearPendingPrivileged/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for IntCtrl_Ip_GetPriority/13 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:

IPA function summary for IntCtrl_Ip_SetPriority/12 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:

IPA function summary for IntCtrl_Ip_DisableIrq/11 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_DisableIrqPrivileged/3 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for IntCtrl_Ip_EnableIrq/10 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_EnableIrqPrivileged/2 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for IntCtrl_Ip_InstallHandler/9 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       8
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_InstallHandlerPrivileged/1 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size: 9 stack: 0

IPA function summary for IntCtrl_Ip_ConfigIrqRouting/8 inlinable
  global time:     183.000001
  self size:       16
  global size:     16
  min size:       8
  self stack:      0
  global stack:    0
    size:8.000000, time:67.227273
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_InstallHandlerPrivileged/1 function not considered for inlining
      loop depth: 1 freq:8.09 size: 4 time: 13callee size: 9 stack: 0
       op2 is compile time invariant

IPA function summary for IntCtrl_Ip_Init/7 inlinable
  global time:     207.272728
  self size:       21
  global size:     21
  min size:       8
  self stack:      0
  global stack:    0
    size:13.000000, time:107.681819
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_DisableIrqPrivileged/3 function not considered for inlining
      loop depth: 1 freq:4.05 size: 2 time: 11callee size: 3 stack: 0
    IntCtrl_Ip_EnableIrqPrivileged/2 function not considered for inlining
      loop depth: 1 freq:4.05 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for IntCtrl_Ip_ClearPendingPrivileged/6 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:

IPA function summary for IntCtrl_Ip_DisableIrqPrivileged/3 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:

IPA function summary for IntCtrl_Ip_EnableIrqPrivileged/2 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:

IPA function summary for IntCtrl_Ip_InstallHandlerPrivileged/1 inlinable
  global time:     16.500000
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:7.000000, time:7.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:2.000000, time:1.400000,  executed if:(op2 != 0B),  nonconst if:(op0 changed) && (op2 != 0B)
    size:2.500000, time:1.750000,  executed if:(op2 != 0B)
    size:0.500000, time:0.350000,  executed if:(op2 != 0B) && (not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:


Flattening functions:
Overall time estimate: 486.772730 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in IntCtrl_Ip_ClearPending/14.
Enqueueing calls in IntCtrl_Ip_GetPriority/13.
Enqueueing calls in IntCtrl_Ip_SetPriority/12.
Enqueueing calls in IntCtrl_Ip_DisableIrq/11.
Enqueueing calls in IntCtrl_Ip_EnableIrq/10.
Enqueueing calls in IntCtrl_Ip_InstallHandler/9.
Enqueueing calls in IntCtrl_Ip_ConfigIrqRouting/8.
Enqueueing calls in IntCtrl_Ip_Init/7.
Enqueueing calls in IntCtrl_Ip_ClearPendingPrivileged/6.
Enqueueing calls in IntCtrl_Ip_DisableIrqPrivileged/3.
Enqueueing calls in IntCtrl_Ip_EnableIrqPrivileged/2.
Enqueueing calls in IntCtrl_Ip_InstallHandlerPrivileged/1.

Considering IntCtrl_Ip_InstallHandlerPrivileged/1 with 19 size
 to be inlined into IntCtrl_Ip_ConfigIrqRouting/8 in ../RTD/src/IntCtrl_Ip.c:631
 Estimated badness is -41.918615, frequency 8.09.

Considering IntCtrl_Ip_EnableIrqPrivileged/2 with 7 size
 to be inlined into IntCtrl_Ip_Init/7 in ../RTD/src/IntCtrl_Ip.c:641
 Estimated badness is -36.584980, frequency 4.05.

Considering IntCtrl_Ip_DisableIrqPrivileged/3 with 7 size
 to be inlined into IntCtrl_Ip_Init/7 in ../RTD/src/IntCtrl_Ip.c:651
 Estimated badness is -36.584980, frequency 4.05.

Considering IntCtrl_Ip_EnableIrqPrivileged/2 with 7 size
 to be inlined into IntCtrl_Ip_EnableIrq/10 in ../RTD/src/IntCtrl_Ip.c:641
 Estimated badness is -29.714286, frequency 1.00.

Considering IntCtrl_Ip_DisableIrqPrivileged/3 with 7 size
 to be inlined into IntCtrl_Ip_DisableIrq/11 in ../RTD/src/IntCtrl_Ip.c:651
 Estimated badness is -29.714286, frequency 1.00.

Considering IntCtrl_Ip_ClearPendingPrivileged/6 with 7 size
 to be inlined into IntCtrl_Ip_ClearPending/14 in ../RTD/src/IntCtrl_Ip.c:681
 Estimated badness is -29.714286, frequency 1.00.

Considering IntCtrl_Ip_InstallHandlerPrivileged/1 with 19 size
 to be inlined into IntCtrl_Ip_InstallHandler/9 in ../RTD/src/IntCtrl_Ip.c:631
 Estimated badness is -2.154386, frequency 1.00.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 343.422729 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for IntCtrl_Ip_ClearPending/14 inlinable
  global time:     6.000000
  self size:       5
  global size:     7
  min size:       4
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  calls:
    IntCtrl_Ip_ClearPendingPrivileged/6 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for IntCtrl_Ip_GetPriority/13 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:

IPA function summary for IntCtrl_Ip_SetPriority/12 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:

IPA function summary for IntCtrl_Ip_DisableIrq/11 inlinable
  global time:     6.000000
  self size:       5
  global size:     7
  min size:       4
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  calls:
    IntCtrl_Ip_DisableIrqPrivileged/3 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for IntCtrl_Ip_EnableIrq/10 inlinable
  global time:     6.000000
  self size:       5
  global size:     7
  min size:       4
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  calls:
    IntCtrl_Ip_EnableIrqPrivileged/2 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for IntCtrl_Ip_InstallHandler/9 inlinable
  global time:     16.150000
  self size:       7
  global size:     19
  min size:       8
  self stack:      0
  global stack:    0
    size:7.000000, time:7.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:2.000000, time:1.400000,  executed if:(op2 != 0B),  nonconst if:(op0 changed) && (op2 != 0B)
    size:2.500000, time:1.750000,  executed if:(op2 != 0B)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    IntCtrl_Ip_InstallHandlerPrivileged/1 inlined
      loop depth: 0 freq:1.00 size: 4 time: 13callee size: 9 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for IntCtrl_Ip_ConfigIrqRouting/8 inlinable
  global time:     150.636365
  self size:       16
  global size:     21
  min size:       8
  self stack:      0
  global stack:    0
    size:17.000000, time:140.045455
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_InstallHandlerPrivileged/19 inlined
      loop depth: 1 freq:8.09 size: 4 time: 13callee size: 9 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for IntCtrl_Ip_Init/7 inlinable
  global time:     150.636365
  self size:       21
  global size:     25
  min size:       12
  self stack:      0
  global stack:    0
    size:21.000000, time:140.045455
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    IntCtrl_Ip_DisableIrqPrivileged/21 inlined
      loop depth: 1 freq:4.05 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    IntCtrl_Ip_EnableIrqPrivileged/20 inlined
      loop depth: 1 freq:4.05 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

Symbol table:

IntCtrl_Ip_DisableIrqPrivileged/21 (IntCtrl_Ip_DisableIrqPrivileged) @06152000
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 3
  References: 
  Referring: 
  Function IntCtrl_Ip_DisableIrqPrivileged/21 is inline copy in IntCtrl_Ip_Init/7
  Clone of IntCtrl_Ip_DisableIrqPrivileged/3
  Availability: local
  Function flags: count:477815111 (estimated locally) body local optimize_size
  Called by: IntCtrl_Ip_Init/7 (inlined) (477815111 (estimated locally),4.05 per call) 
  Calls: 
IntCtrl_Ip_EnableIrqPrivileged/20 (IntCtrl_Ip_EnableIrqPrivileged) @061197e0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 2
  References: 
  Referring: 
  Function IntCtrl_Ip_EnableIrqPrivileged/20 is inline copy in IntCtrl_Ip_Init/7
  Clone of IntCtrl_Ip_EnableIrqPrivileged/2
  Availability: local
  Function flags: count:477815111 (estimated locally) body local optimize_size
  Called by: IntCtrl_Ip_Init/7 (inlined) (477815111 (estimated locally),4.05 per call) 
  Calls: 
IntCtrl_Ip_InstallHandlerPrivileged/19 (IntCtrl_Ip_InstallHandlerPrivileged) @06119a80
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 1
  References: 
  Referring: 
  Function IntCtrl_Ip_InstallHandlerPrivileged/19 is inline copy in IntCtrl_Ip_ConfigIrqRouting/8
  Clone of IntCtrl_Ip_InstallHandlerPrivileged/1
  Availability: local
  Function flags: count:955630223 (estimated locally) body local optimize_size
  Called by: IntCtrl_Ip_ConfigIrqRouting/8 (inlined) (955630223 (estimated locally),8.09 per call) 
  Calls: 
IntCtrl_Ip_ClearPending/14 (IntCtrl_Ip_ClearPending) @06120c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: IntCtrl_Ip_ClearPendingPrivileged/6 (inlined) (1073741824 (estimated locally),1.00 per call) 
IntCtrl_Ip_GetPriority/13 (IntCtrl_Ip_GetPriority) @061209a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
IntCtrl_Ip_SetPriority/12 (IntCtrl_Ip_SetPriority) @06120700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
IntCtrl_Ip_DisableIrq/11 (IntCtrl_Ip_DisableIrq) @06120460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: IntCtrl_Ip_DisableIrqPrivileged/3 (inlined) (1073741824 (estimated locally),1.00 per call) 
IntCtrl_Ip_EnableIrq/10 (IntCtrl_Ip_EnableIrq) @061201c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: IntCtrl_Ip_EnableIrqPrivileged/2 (inlined) (1073741824 (estimated locally),1.00 per call) 
IntCtrl_Ip_InstallHandler/9 (IntCtrl_Ip_InstallHandler) @06119e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: IntCtrl_Ip_InstallHandlerPrivileged/1 (inlined) (1073741824 (estimated locally),1.00 per call) 
IntCtrl_Ip_ConfigIrqRouting/8 (IntCtrl_Ip_ConfigIrqRouting) @06119620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: IntCtrl_Ip_InstallHandlerPrivileged/19 (inlined) (955630223 (estimated locally),8.09 per call) 
IntCtrl_Ip_Init/7 (IntCtrl_Ip_Init) @061190e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: IntCtrl_Ip_DisableIrqPrivileged/21 (inlined) (477815111 (estimated locally),4.05 per call) IntCtrl_Ip_EnableIrqPrivileged/20 (inlined) (477815111 (estimated locally),4.05 per call) 
IntCtrl_Ip_ClearPendingPrivileged/6 (IntCtrl_Ip_ClearPendingPrivileged) @06119d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function IntCtrl_Ip_ClearPendingPrivileged/6 is inline copy in IntCtrl_Ip_ClearPending/14
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: IntCtrl_Ip_ClearPending/14 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
IntCtrl_Ip_DisableIrqPrivileged/3 (IntCtrl_Ip_DisableIrqPrivileged) @06119540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 21
  References: 
  Referring: 
  Function IntCtrl_Ip_DisableIrqPrivileged/3 is inline copy in IntCtrl_Ip_DisableIrq/11
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: IntCtrl_Ip_DisableIrq/11 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
IntCtrl_Ip_EnableIrqPrivileged/2 (IntCtrl_Ip_EnableIrqPrivileged) @061192a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 20
  References: 
  Referring: 
  Function IntCtrl_Ip_EnableIrqPrivileged/2 is inline copy in IntCtrl_Ip_EnableIrq/10
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: IntCtrl_Ip_EnableIrq/10 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
IntCtrl_Ip_InstallHandlerPrivileged/1 (IntCtrl_Ip_InstallHandlerPrivileged) @06119000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 19
  References: 
  Referring: 
  Function IntCtrl_Ip_InstallHandlerPrivileged/1 is inline copy in IntCtrl_Ip_InstallHandler/9
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: IntCtrl_Ip_InstallHandler/9 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 

;; Function IntCtrl_Ip_Init (IntCtrl_Ip_Init, funcdef_no=7, decl_uid=6212, cgraph_uid=8, symbol_order=7)


Symbols to be put in SSA form
{ D.6340 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Removing basic block 4
Removing basic block 5
Removing basic block 9
Removing basic block 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
IntCtrl_Ip_Init (const struct IntCtrl_Ip_CtrlConfigType * pIntCtrlCtrlConfig)
{
  uint32 irqIdx;
  const struct IntCtrl_Ip_IrqConfigType * _1;
  long unsigned int _2;
  const struct IntCtrl_Ip_IrqConfigType * _3;
  <unnamed type> _4;
  unsigned char _5;
  _Bool _6;
  long unsigned int _7;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int eIrqNumber.7_16;
  unsigned char _17;
  long unsigned int eIrqNumber.3_21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int eIrqNumber.5_25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG irqIdx => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = pIntCtrlCtrlConfig_12(D)->aIrqConfig;
  _2 = irqIdx_8 * 8;
  _3 = _1 + _2;
  _4 = _3->eIrqNumber;
  _5 = _3->u8IrqPriority;
  # DEBUG eIrqNumber => _4
  # DEBUG u8Priority => _5
  # DEBUG INLINE_ENTRY IntCtrl_Ip_SetPriority
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => _4
  # DEBUG u8Priority => _5
  # DEBUG INLINE_ENTRY IntCtrl_Ip_SetPriorityPrivileged
  # DEBUG BEGIN_STMT
  # DEBUG shift => 4
  # DEBUG BEGIN_STMT
  _14 = (long unsigned int) _5;
  _15 = _14 << 4;
  eIrqNumber.7_16 = (long unsigned int) _4;
  _17 = (unsigned char) _15;
  MEM[(struct S32_NVIC_Type *)3758153984B].IP[eIrqNumber.7_16] ={v} _17;
  # DEBUG eIrqNumber => NULL
  # DEBUG u8Priority => NULL
  # DEBUG eIrqNumber => NULL
  # DEBUG u8Priority => NULL
  # DEBUG BEGIN_STMT
  _6 = _3->bIrqEnabled;
  if (_6 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => _4
  # DEBUG INLINE_ENTRY IntCtrl_Ip_EnableIrq
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => _4
  # DEBUG INLINE_ENTRY IntCtrl_Ip_EnableIrqPrivileged
  # DEBUG BEGIN_STMT
  eIrqNumber.3_21 = (long unsigned int) _4;
  _22 = eIrqNumber.3_21 & 31;
  _23 = eIrqNumber.3_21 >> 5;
  _24 = 1 << _22;
  MEM[(struct S32_NVIC_Type *)3758153984B].ISER[_23] ={v} _24;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => _4
  # DEBUG INLINE_ENTRY IntCtrl_Ip_DisableIrq
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => _4
  # DEBUG INLINE_ENTRY IntCtrl_Ip_DisableIrqPrivileged
  # DEBUG BEGIN_STMT
  eIrqNumber.5_25 = (long unsigned int) _4;
  _26 = eIrqNumber.5_25 & 31;
  _27 = eIrqNumber.5_25 >> 5;
  _28 = 1 << _26;
  MEM[(struct S32_NVIC_Type *)3758153984B].ICER[_27] ={v} _28;

  <bb 6> [local count: 955630223]:
  # DEBUG eIrqNumber => NULL
  # DEBUG eIrqNumber => NULL
  # DEBUG eIrqNumber => NULL
  # DEBUG eIrqNumber => NULL
  # DEBUG BEGIN_STMT
  irqIdx_13 = irqIdx_8 + 1;
  # DEBUG irqIdx => irqIdx_13

  <bb 7> [local count: 1073741824]:
  # irqIdx_8 = PHI <0(2), irqIdx_13(6)>
  # DEBUG irqIdx => irqIdx_8
  # DEBUG BEGIN_STMT
  _7 = pIntCtrlCtrlConfig_12(D)->u32ConfigIrqCount;
  if (_7 > irqIdx_8)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function IntCtrl_Ip_ConfigIrqRouting (IntCtrl_Ip_ConfigIrqRouting, funcdef_no=8, decl_uid=6214, cgraph_uid=9, symbol_order=8)

Removing basic block 8

Symbols to be put in SSA form
{ D.6336 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 8 ( 80%)


Merging blocks 3 and 7
Merging blocks 3 and 9
Merging blocks 3 and 6
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
IntCtrl_Ip_ConfigIrqRouting (const struct IntCtrl_Ip_GlobalRouteConfigType * routeConfig)
{
  uint32 * pVectorRam;
  uint32 irqIdx;
  const struct IntCtrl_Ip_IrqRouteConfigType * _1;
  long unsigned int _2;
  const struct IntCtrl_Ip_IrqRouteConfigType * _3;
  <unnamed type> _4;
  void (*<T5e1>) (void) _5;
  long unsigned int _6;
  long unsigned int _13;
  sizetype eIrqNumber.1_21;
  sizetype _22;
  sizetype _23;
  uint32 * _24;
  long unsigned int pfNewHandler.2_25;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG irqIdx => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = routeConfig_10(D)->aIrqConfig;
  _2 = irqIdx_7 * 12;
  _3 = _1 + _2;
  _4 = _3->eIrqNumber;
  _5 = _3->pfHandler;
  # DEBUG eIrqNumber => _4
  # DEBUG pfNewHandler => _5
  # DEBUG pfOldHandler => 0B
  # DEBUG INLINE_ENTRY IntCtrl_Ip_InstallHandler
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => _4
  # DEBUG pfNewHandler => _5
  # DEBUG pfOldHandler => 0B
  # DEBUG INLINE_ENTRY IntCtrl_Ip_InstallHandlerPrivileged
  # DEBUG BEGIN_STMT
  _13 ={v} MEM[(struct S32_SCB_Type *)3758153728B].VTOR;
  pVectorRam_14 = (uint32 *) _13;
  # DEBUG pVectorRam => pVectorRam_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  eIrqNumber.1_21 = (sizetype) _4;
  _22 = eIrqNumber.1_21 + 16;
  _23 = _22 * 4;
  _24 = pVectorRam_14 + _23;
  pfNewHandler.2_25 = (long unsigned int) _5;
  *_24 = pfNewHandler.2_25;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("dsb");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("isb");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG eIrqNumber => NULL
  # DEBUG pfNewHandler => NULL
  # DEBUG pfOldHandler => NULL
  # DEBUG pVectorRam => NULL
  # DEBUG eIrqNumber => NULL
  # DEBUG pfNewHandler => NULL
  # DEBUG pfOldHandler => NULL
  # DEBUG BEGIN_STMT
  irqIdx_11 = irqIdx_7 + 1;
  # DEBUG irqIdx => irqIdx_11

  <bb 4> [local count: 1073741824]:
  # irqIdx_7 = PHI <0(2), irqIdx_11(3)>
  # DEBUG irqIdx => irqIdx_7
  # DEBUG BEGIN_STMT
  _6 = routeConfig_10(D)->u32ConfigIrqCount;
  if (_6 > irqIdx_7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function IntCtrl_Ip_InstallHandler (IntCtrl_Ip_InstallHandler, funcdef_no=9, decl_uid=6218, cgraph_uid=10, symbol_order=9)


Symbols to be put in SSA form
{ D.6335 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


Merging blocks 2 and 4
Merging blocks 6 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
IntCtrl_Ip_InstallHandler (IRQn_Type eIrqNumber, void (*IntCtrl_Ip_IrqHandlerType) (void) pfNewHandler, void (*IntCtrl_Ip_IrqHandlerType) (void) * const pfOldHandler)
{
  uint32 * pVectorRam;
  long unsigned int _6;
  sizetype eIrqNumber.0_8;
  sizetype _9;
  sizetype _10;
  uint32 * _11;
  long unsigned int _12;
  void (*<T5e1>) (void) _13;
  sizetype eIrqNumber.1_14;
  sizetype _15;
  sizetype _16;
  uint32 * _17;
  long unsigned int pfNewHandler.2_18;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => eIrqNumber_2(D)
  # DEBUG pfNewHandler => pfNewHandler_3(D)
  # DEBUG pfOldHandler => pfOldHandler_4(D)
  # DEBUG INLINE_ENTRY IntCtrl_Ip_InstallHandlerPrivileged
  # DEBUG BEGIN_STMT
  _6 ={v} MEM[(struct S32_SCB_Type *)3758153728B].VTOR;
  pVectorRam_7 = (uint32 *) _6;
  # DEBUG pVectorRam => pVectorRam_7
  # DEBUG BEGIN_STMT
  if (pfOldHandler_4(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 4>; [30.00%]

  <bb 3> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  eIrqNumber.0_8 = (sizetype) eIrqNumber_2(D);
  _9 = eIrqNumber.0_8 + 16;
  _10 = _9 * 4;
  _11 = pVectorRam_7 + _10;
  _12 = *_11;
  _13 = (void (*<T5e1>) (void)) _12;
  *pfOldHandler_4(D) = _13;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  eIrqNumber.1_14 = (sizetype) eIrqNumber_2(D);
  _15 = eIrqNumber.1_14 + 16;
  _16 = _15 * 4;
  _17 = pVectorRam_7 + _16;
  pfNewHandler.2_18 = (long unsigned int) pfNewHandler_3(D);
  *_17 = pfNewHandler.2_18;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("dsb");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("isb");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG eIrqNumber => NULL
  # DEBUG pfNewHandler => NULL
  # DEBUG pfOldHandler => NULL
  # DEBUG pVectorRam => NULL
  return;

}



;; Function IntCtrl_Ip_EnableIrq (IntCtrl_Ip_EnableIrq, funcdef_no=10, decl_uid=6220, cgraph_uid=11, symbol_order=10)


Symbols to be put in SSA form
{ D.6337 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


Merging blocks 2 and 4
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
IntCtrl_Ip_EnableIrq (IRQn_Type eIrqNumber)
{
  long unsigned int eIrqNumber.3_4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => eIrqNumber_2(D)
  # DEBUG INLINE_ENTRY IntCtrl_Ip_EnableIrqPrivileged
  # DEBUG BEGIN_STMT
  eIrqNumber.3_4 = (long unsigned int) eIrqNumber_2(D);
  _5 = eIrqNumber.3_4 & 31;
  _6 = eIrqNumber.3_4 >> 5;
  _7 = 1 << _5;
  MEM[(struct S32_NVIC_Type *)3758153984B].ISER[_6] ={v} _7;
  # DEBUG eIrqNumber => NULL
  return;

}



;; Function IntCtrl_Ip_DisableIrq (IntCtrl_Ip_DisableIrq, funcdef_no=11, decl_uid=6222, cgraph_uid=12, symbol_order=11)


Symbols to be put in SSA form
{ D.6338 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


Merging blocks 2 and 4
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
IntCtrl_Ip_DisableIrq (IRQn_Type eIrqNumber)
{
  long unsigned int eIrqNumber.5_4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => eIrqNumber_2(D)
  # DEBUG INLINE_ENTRY IntCtrl_Ip_DisableIrqPrivileged
  # DEBUG BEGIN_STMT
  eIrqNumber.5_4 = (long unsigned int) eIrqNumber_2(D);
  _5 = eIrqNumber.5_4 & 31;
  _6 = eIrqNumber.5_4 >> 5;
  _7 = 1 << _5;
  MEM[(struct S32_NVIC_Type *)3758153984B].ICER[_6] ={v} _7;
  # DEBUG eIrqNumber => NULL
  return;

}



;; Function IntCtrl_Ip_SetPriority (IntCtrl_Ip_SetPriority, funcdef_no=12, decl_uid=6225, cgraph_uid=13, symbol_order=12)

IntCtrl_Ip_SetPriority (IRQn_Type eIrqNumber, uint8 u8Priority)
{
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int eIrqNumber.7_6;
  unsigned char _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => eIrqNumber_2(D)
  # DEBUG u8Priority => u8Priority_3(D)
  # DEBUG INLINE_ENTRY IntCtrl_Ip_SetPriorityPrivileged
  # DEBUG BEGIN_STMT
  # DEBUG shift => 4
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) u8Priority_3(D);
  _5 = _4 << 4;
  eIrqNumber.7_6 = (long unsigned int) eIrqNumber_2(D);
  _7 = (unsigned char) _5;
  MEM[(struct S32_NVIC_Type *)3758153984B].IP[eIrqNumber.7_6] ={v} _7;
  # DEBUG eIrqNumber => NULL
  # DEBUG u8Priority => NULL
  return;

}



;; Function IntCtrl_Ip_GetPriority (IntCtrl_Ip_GetPriority, funcdef_no=13, decl_uid=6227, cgraph_uid=14, symbol_order=13)

IntCtrl_Ip_GetPriority (IRQn_Type eIrqNumber)
{
  uint8 priority;
  long unsigned int eIrqNumber.8_3;
  unsigned char _4;
  int _5;
  int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => eIrqNumber_2(D)
  # DEBUG INLINE_ENTRY IntCtrl_Ip_GetPriorityPrivileged
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG shift => 4
  # DEBUG BEGIN_STMT
  eIrqNumber.8_3 = (long unsigned int) eIrqNumber_2(D);
  _4 ={v} MEM[(struct S32_NVIC_Type *)3758153984B].IP[eIrqNumber.8_3];
  _5 = (int) _4;
  _6 = _5 >> 4;
  priority_7 = (uint8) _6;
  # DEBUG priority => priority_7
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => NULL
  # DEBUG priority => NULL
  return priority_7;

}



;; Function IntCtrl_Ip_ClearPending (IntCtrl_Ip_ClearPending, funcdef_no=14, decl_uid=6229, cgraph_uid=15, symbol_order=14)


Symbols to be put in SSA form
{ D.6342 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


Merging blocks 2 and 4
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
IntCtrl_Ip_ClearPending (IRQn_Type eIrqNumber)
{
  long unsigned int eIrqNumber.9_4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eIrqNumber => eIrqNumber_2(D)
  # DEBUG INLINE_ENTRY IntCtrl_Ip_ClearPendingPrivileged
  # DEBUG BEGIN_STMT
  eIrqNumber.9_4 = (long unsigned int) eIrqNumber_2(D);
  _5 = eIrqNumber.9_4 & 31;
  _6 = eIrqNumber.9_4 >> 5;
  _7 = 1 << _5;
  MEM[(struct S32_NVIC_Type *)3758153984B].ICPR[_6] ={v} _7;
  # DEBUG eIrqNumber => NULL
  return;

}


