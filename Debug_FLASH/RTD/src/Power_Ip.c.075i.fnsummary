
Analyzing function: Power_Ip_InstallNotificationsCallback/9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_InstallNotificationsCallback

IPA function summary for Power_Ip_InstallNotificationsCallback/9 inlinable
  global time:     3.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Power_Ip_EnableSleepOnExit/8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_EnableSleepOnExit

IPA function summary for Power_Ip_EnableSleepOnExit/8 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_CM4_EnableSleepOnExit/21 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10


Analyzing function: Power_Ip_DisableSleepOnExit/7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_DisableSleepOnExit

IPA function summary for Power_Ip_DisableSleepOnExit/7 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_CM4_DisableSleepOnExit/20 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10


Analyzing function: Power_Ip_InitPower/6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_InitPower

IPA function summary for Power_Ip_InitPower/6 inlinable
  global time:     26.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    Power_Ip_SMC_AllowedModesConfig/19 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11
    Power_Ip_PMC_PowerInit/18 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11


Analyzing function: Power_Ip_InitReset/5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_InitReset

IPA function summary for Power_Ip_InitReset/5 inlinable
  global time:     14.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Power_Ip_RCM_ResetInit/17 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11


Analyzing function: Power_Ip_GetResetRawValue/4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_GetResetRawValue

IPA function summary for Power_Ip_GetResetRawValue/4 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_RCM_GetResetRawValue/16 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11


Analyzing function: Power_Ip_GetResetReason/3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Power_Ip_GetResetReason

IPA function summary for Power_Ip_GetResetReason/3 inlinable
  global time:     16.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_RCM_GetResetReason/14 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11


Analyzing function: Power_Ip_SetMode/1
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 4 5 6
;; 2 succs { 5 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }

Analyzing function body size: Power_Ip_SetMode

IPA function summary for Power_Ip_SetMode/1 inlinable
  global time:     32.040000
  self size:       17
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    ReportPowerErrors/13 function body not available
      loop depth: 0 freq:0.67 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_SMC_ModeConfig/12 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12
    Power_Ip_SMC_ModeCheckEntry/11 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

Symbol table:

Power_Ip_CM4_EnableSleepOnExit/21 (Power_Ip_CM4_EnableSleepOnExit) @065dba80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_EnableSleepOnExit/8 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Power_Ip_CM4_DisableSleepOnExit/20 (Power_Ip_CM4_DisableSleepOnExit) @065db8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_DisableSleepOnExit/7 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Power_Ip_SMC_AllowedModesConfig/19 (Power_Ip_SMC_AllowedModesConfig) @065db700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_InitPower/6 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Power_Ip_PMC_PowerInit/18 (Power_Ip_PMC_PowerInit) @065db620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_InitPower/6 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Power_Ip_RCM_ResetInit/17 (Power_Ip_RCM_ResetInit) @065db460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_InitReset/5 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Power_Ip_RCM_GetResetRawValue/16 (Power_Ip_RCM_GetResetRawValue) @065db2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_GetResetRawValue/4 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
resetReasonArray.5767/15 (resetReasonArray) @065da480
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_GetResetReason/3 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Power_Ip_RCM_GetResetReason/14 (Power_Ip_RCM_GetResetReason) @065db000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_GetResetReason/3 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ReportPowerErrors/13 (ReportPowerErrors) @065d8620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_SetMode/1 (719407023 (estimated locally),0.67 per call) 
  Calls: 
Power_Ip_SMC_ModeConfig/12 (Power_Ip_SMC_ModeConfig) @065d8380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_SetMode/1 (536870913 (estimated locally),0.50 per call) 
  Calls: 
Power_Ip_SMC_ModeCheckEntry/11 (Power_Ip_SMC_ModeCheckEntry) @065d80e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_SetMode/1 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ReportPowerErrorsEmptyCallback/10 (ReportPowerErrorsEmptyCallback) @065d8b60
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: powerReportErrorsCallback/0 (addr)
  Availability: not_available
  Function flags: optimize_size
  Called by: 
  Calls: 
Power_Ip_InstallNotificationsCallback/9 (Power_Ip_InstallNotificationsCallback) @065d8a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: powerReportErrorsCallback/0 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Power_Ip_EnableSleepOnExit/8 (Power_Ip_EnableSleepOnExit) @065d87e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_CM4_EnableSleepOnExit/21 (1073741824 (estimated locally),1.00 per call) 
Power_Ip_DisableSleepOnExit/7 (Power_Ip_DisableSleepOnExit) @065d8540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_CM4_DisableSleepOnExit/20 (1073741824 (estimated locally),1.00 per call) 
Power_Ip_InitPower/6 (Power_Ip_InitPower) @065d82a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_SMC_AllowedModesConfig/19 (1073741824 (estimated locally),1.00 per call) Power_Ip_PMC_PowerInit/18 (1073741824 (estimated locally),1.00 per call) 
Power_Ip_InitReset/5 (Power_Ip_InitReset) @065d8000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_RCM_ResetInit/17 (1073741824 (estimated locally),1.00 per call) 
Power_Ip_GetResetRawValue/4 (Power_Ip_GetResetRawValue) @052ac9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_RCM_GetResetRawValue/16 (1073741824 (estimated locally),1.00 per call) 
Power_Ip_GetResetReason/3 (Power_Ip_GetResetReason) @052acee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: resetReasonArray.5767/15 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_RCM_GetResetReason/14 (1073741824 (estimated locally),1.00 per call) 
Power_Ip_SetMode/1 (Power_Ip_SetMode) @052ac8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ReportPowerErrors/13 (719407023 (estimated locally),0.67 per call) Power_Ip_SMC_ModeConfig/12 (536870913 (estimated locally),0.50 per call) Power_Ip_SMC_ModeCheckEntry/11 (1073741824 (estimated locally),1.00 per call) 
powerReportErrorsCallback/0 (powerReportErrorsCallback) @052b81b0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: ReportPowerErrorsEmptyCallback/10 (addr)
  Referring: Power_Ip_InstallNotificationsCallback/9 (write)
  Availability: available
  Varpool flags: initialized
Power_Ip_InstallNotificationsCallback (void (*Power_Ip_ReportErrorsCallbackType) (Power_Ip_PowerReportErrorType, uint8) reportErrorsCallback)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  powerReportErrorsCallback = reportErrorsCallback_2(D);
  return;

}


Power_Ip_EnableSleepOnExit ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_CM4_EnableSleepOnExit ();
  return;

}


Power_Ip_DisableSleepOnExit ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_CM4_DisableSleepOnExit ();
  return;

}


Power_Ip_InitPower (const struct Power_Ip_HwIPsConfigType * Power_Ip_pHwIPsConfigPtr)
{
  const struct Power_Ip_PMC_ConfigType * _1;
  const struct Power_Ip_SMC_ConfigType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Power_Ip_pHwIPsConfigPtr_4(D)->PMC_pConfig;
  Power_Ip_PMC_PowerInit (_1);
  # DEBUG BEGIN_STMT
  _2 = Power_Ip_pHwIPsConfigPtr_4(D)->SMC_pConfig;
  Power_Ip_SMC_AllowedModesConfig (_2);
  return;

}


Power_Ip_InitReset (const struct Power_Ip_HwIPsConfigType * Power_Ip_pHwIPsConfigPtr)
{
  const struct Power_Ip_RCM_ConfigType * _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Power_Ip_pHwIPsConfigPtr_3(D)->RCM_pConfig;
  Power_Ip_RCM_ResetInit (_1);
  return;

}


Power_Ip_GetResetRawValue ()
{
  Power_Ip_RawResetType ResetReason;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ResetReason_3 = Power_Ip_RCM_GetResetRawValue ();
  # DEBUG ResetReason => ResetReason_3
  # DEBUG BEGIN_STMT
  return ResetReason_3;

}


Power_Ip_GetResetReason ()
{
  Power_Ip_ResetType eResetReason;
  static const Power_Ip_ResetType resetReasonArray[15] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
  uint32 resetVal;
  <unnamed type> _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eResetReason => 14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  resetVal_3 = Power_Ip_RCM_GetResetReason ();
  # DEBUG resetVal => resetVal_3
  # DEBUG BEGIN_STMT
  # DEBUG resetReasonIndex => resetVal_3
  # DEBUG INLINE_ENTRY Power_Ip_ConvertIntergeToResetType
  # DEBUG BEGIN_STMT
  # DEBUG eResetReason => 12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = resetReasonArray[resetVal_3];
  if (_4 <= 14)
    goto <bb 3>; [65.00%]
  else
    goto <bb 4>; [35.00%]

  <bb 3> [local count: 697932186]:
  # DEBUG BEGIN_STMT
  # DEBUG eResetReason => _4

  <bb 4> [local count: 1073741824]:
  # eResetReason_5 = PHI <12(2), _4(3)>
  # DEBUG eResetReason => eResetReason_5
  # DEBUG BEGIN_STMT
  # DEBUG resetReasonIndex => NULL
  # DEBUG eResetReason => NULL
  # DEBUG eResetReason => eResetReason_5
  # DEBUG BEGIN_STMT
  return eResetReason_5;

}


Power_Ip_SetMode (const struct Power_Ip_ModeConfigType * Power_Ip_pModeConfigPtr)
{
  Power_Ip_PowerModeType ePowerMode;
  uint32 ePowerSwitchMode;
  <unnamed type> _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ePowerMode_5 = Power_Ip_pModeConfigPtr_4(D)->Power_Ip_ePowerMode;
  # DEBUG ePowerMode => ePowerMode_5
  # DEBUG BEGIN_STMT
  _1 = Power_Ip_SMC_ModeCheckEntry (ePowerMode_5);
  if (_1 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  ePowerSwitchMode_8 = Power_Ip_SMC_ModeConfig (Power_Ip_pModeConfigPtr_4(D));
  # DEBUG ePowerSwitchMode => ePowerSwitchMode_8
  # DEBUG BEGIN_STMT
  if (ePowerSwitchMode_8 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 719407023]:
  # DEBUG ePowerSwitchMode => NULL
  # DEBUG BEGIN_STMT
  ReportPowerErrors (3, 255);

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


